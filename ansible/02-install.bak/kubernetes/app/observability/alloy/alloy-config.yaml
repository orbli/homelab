apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config
  namespace: observability
data:
  config.alloy: |
    // Kubernetes Log Collection Configuration
    
    // Discover all pods in specified namespaces
    discovery.kubernetes "pods" {
      role = "pod"
      namespaces {
        own_namespace = false
        names = ["devops", "iam", "observability", "networking", "kube-system", "gitops", "default"]
      }
    }

    // Relabel discovered targets to extract metadata
    discovery.relabel "pods" {
      targets = discovery.kubernetes.pods.targets

      rule {
        source_labels = ["__meta_kubernetes_pod_name"]
        target_label  = "pod"
      }

      rule {
        source_labels = ["__meta_kubernetes_namespace"]
        target_label  = "namespace"
      }

      rule {
        source_labels = ["__meta_kubernetes_pod_container_name"]
        target_label  = "container"
      }

      rule {
        source_labels = ["__meta_kubernetes_pod_node_name"]
        target_label  = "node"
      }

      rule {
        source_labels = ["__meta_kubernetes_pod_label_app"]
        target_label  = "app"
      }

      rule {
        source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
        separator     = "/"
        target_label  = "__path__"
        replacement   = "/var/log/pods/*$1/$2/*.log"
      }
    }

    // Collect logs from pods
    loki.source.kubernetes "pods" {
      targets    = discovery.relabel.pods.output
      forward_to = [loki.process.pod_logs.receiver]
    }

    // Process logs before sending
    loki.process "pod_logs" {
      forward_to = [loki.write.default.receiver]

      // Try to parse JSON logs
      stage.json {
        expressions = {
          level = "level",
          msg   = "msg",
        }
      }

      // Extract log level if present
      stage.regex {
        expression = "(?P<detected_level>(DEBUG|INFO|WARN|ERROR|FATAL|debug|info|warn|error|fatal))"
      }

      // Add detected level as a label
      stage.labels {
        values = {
          level = "detected_level",
        }
      }
    }

    // Write logs to Loki
    loki.write "default" {
      endpoint {
        url = "http://loki.observability.svc.home-hk1-cluster.orbb.li:3100/loki/api/v1/push"
      }
    }