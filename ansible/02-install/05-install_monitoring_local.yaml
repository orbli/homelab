---
- name: Deploy K8s Monitoring via ArgoCD (Local Repository)
  hosts: localhost
  connection: local
  gather_facts: false
  
  tasks:
    # Initialize local git repository if not already done
    - name: Initialize local git repository
      command: git init
      args:
        chdir: /home/eli/workbench
        creates: /home/eli/workbench/.git
    
    - name: Add all files to git
      command: git add .
      args:
        chdir: /home/eli/workbench
      ignore_errors: true
    
    - name: Create initial commit
      command: git commit -m "Initial homelab setup"
      args:
        chdir: /home/eli/workbench
      ignore_errors: true
    
    # Ensure observability namespace exists first
    - name: Ensure observability namespace exists
      kubernetes.core.k8s:
        name: observability
        api_version: v1
        kind: Namespace
        state: present

    - name: Apply ArgoCD Application for k8s-monitoring (local git)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: k8s-monitoring
            namespace: devops
            finalizers:
              - resources-finalizer.argocd.argoproj.io
            annotations:
              argocd.argoproj.io/sync-wave: "1"
          spec:
            project: default
            source:
              repoURL: file:///home/eli/workbench
              targetRevision: HEAD
              path: homelab/argocd/k8s-monitoring
            destination:
              server: https://kubernetes.default.svc
              namespace: observability
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true
                - ServerSideApply=true
                - RespectIgnoreDifferences=true

    - name: Wait for ArgoCD Application to be ready
      kubernetes.core.k8s_info:
        api_version: argoproj.io/v1alpha1
        kind: Application
        name: k8s-monitoring
        namespace: devops
        wait: true
        wait_condition:
          type: "Synced"
          status: "True"
        wait_timeout: 600
      ignore_errors: true

    - name: Display k8s-monitoring ArgoCD application information
      debug:
        msg: |
          K8s Monitoring ArgoCD Application deployment completed!
          
          Check application status:
          kubectl get applications -n devops k8s-monitoring
          
          Check application details:
          kubectl get applications -n devops k8s-monitoring -o yaml
          
          Check ArgoCD server logs if issues:
          kubectl logs -n devops deployment/argocd-server
          
          Check deployed resources:
          kubectl get all -n observability
          
          Access ArgoCD UI:
          kubectl port-forward svc/argocd-server -n devops 8080:443
          Then access: https://localhost:8080
          
          Get ArgoCD admin password:
          kubectl -n devops get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
          
          The monitoring stack will be automatically deployed and managed by ArgoCD! 