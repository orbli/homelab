---
- name: Install Tailscale on all nodes
  hosts: k8s_masters,shared_drive
  become: true
  tasks:
    - name: Add Tailscale GPG key
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/noble.noarmor.gpg | tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
      args:
        creates: /usr/share/keyrings/tailscale-archive-keyring.gpg

    - name: Add Tailscale repository
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/noble.tailscale-keyring.list | tee /etc/apt/sources.list.d/tailscale.list
      args:
        creates: /etc/apt/sources.list.d/tailscale.list

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Tailscale
      ansible.builtin.apt:
        name: tailscale
        state: present

    - name: Start and enable Tailscale service
      ansible.builtin.systemd:
        name: tailscaled
        state: started
        enabled: yes

    - name: Enable SSH in Tailscale
      ansible.builtin.command: tailscale set --ssh
      changed_when: true

- name: Configure Tailscale on shared drive
  hosts: shared_drive
  become: true
  tasks:
    - name: Connect to Tailscale network with SSH enabled
      ansible.builtin.shell: |
        tailscale up --ssh --accept-dns=false > /tmp/tailscale_output 2>&1 & echo $! > /tmp/tailscale.pid
        sleep 2
        cat /tmp/tailscale_output
      register: tailscale_result
      changed_when: true

    - name: Display Tailscale output
      ansible.builtin.debug:
        msg: "{{ tailscale_result.stdout_lines | map('replace', '\t', '') | list }}"

    - name: Display Tailscale status
      ansible.builtin.shell: tailscale status
      register: tailscale_status
      changed_when: false

    - name: Show Tailscale status output
      ansible.builtin.debug:
        msg: "{{ tailscale_status.stdout_lines }}"

    - name: Wait for Tailscale up to complete
      ansible.builtin.shell: |
        if [ -f /tmp/tailscale.pid ]; then
          pid=$(cat /tmp/tailscale.pid)
          while kill -0 $pid 2>/dev/null; do
            sleep 5
          done
          rm -f /tmp/tailscale.pid /tmp/tailscale_output
        fi
      changed_when: false
